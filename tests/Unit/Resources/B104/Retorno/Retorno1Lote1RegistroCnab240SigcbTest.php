<?php

use Cnab\Retorno;

test('deve processar retorno caixa cnab 240 sigcb 1 registro', function () {
    $fileContent = file_get_contents(__DIR__ . '/../../../../../docs/RETORNOCEF24062023487.RET');

    $arquivo = new Retorno($fileContent);

    $registros = $arquivo->getRegistros();

    expect($registros['registro0'])->toEqual([
        'codigo_banco' => 104,
        'codigo_lote' => 0,
        'tipo_registro' => 0,
        'filler1' => "",
        'tipo_inscricao' => 2,
        'numero_inscricao' => 91378372000101,
        'uso_caixa1' => 0,
        'agencia' => 501,
        'agencia_dv' => 0,
        'codigo_beneficiario' => 721933,
        'uso_caixa2' => 0,
        'nome_empresa' => 'MARLENE BURGEL & CIA LTDA - ME',
        'nome_banco' => 'C ECON FEDERAL',
        'filler3' => "",
        'codigo_remessa' => 2,
        'data_geracao' => '2023-06-23',
        'hora_geracao' => 11913,
        'numero_sequencial_arquivo' => 1306,
        'versao_layout' => 40,
        'densidade_gravacao' => 0,
        'filler4' => '',
        'situacao_arquivo' => 'RETORNO-PRODUCAO',
        'versao_aplicativo' => '',
        'filler5' => '000',
    ]);
    foreach ($registros['lotes'] as $lote) {
        expect($lote['registro1'])->toEqual([
            "codigo_banco" => 104,
            "codigo_lote" => 1,
            "tipo_registro" => 1,
            "operacao" => "T",
            "tipo_servico" => 1,
            "filler1" => 0,
            "versa_layout" => 30,
            "filler2" => "",
            "tipo_inscricao" => 2,
            "numero_inscricao" => 91378372000101,
            "codigo_beneficiario" => 0,
            "uso_caixa1" => 0,
            "agencia" => 501,
            "agencia_dv" => 0,
            "codigo_convenio" => 721933,
            "modelo_boleto" => 0,
            "uso_caixa2" => 0,
            "nome_empresa" => "MARLENE BURGEL & CIA LTDA - ME",
            "mensagem_fixa1" => "",
            "mensagem_fixa2" => "",
            "numero_remessa" => 1306,
            "data_gravacao" => "2023-06-23",
            "data_credito" => "00000000",
            "filler4" => "00                          00",
        ])
            ->and($lote['detalhes'][0]['registro3T'])->toEqual([
                "codigo_banco" => 104,
                "codigo_lote" => 1,
                "tipo_registro" => 3,
                "numero_registro" => 1,
                "seguimento" => "T",
                "filler1" => "",
                "codigo_movimento" => 6,
                "agencia" => 0,
                "agencia_dv" => "0",
                "codigo_convenio" => 721933,
                "filler2" => 0,
                "num_banco_pagadores" => 0,
                "filler3" => 0,
                "filler4" => "",
                "carteira" => 14,
                "nosso_numero" => 11842,
                "dv_nosso_numero" => 2,
                "codigo_carteira" => 1,
                "seu_numero" => 38400,
                "filler5" => "",
                "data_vencimento" => "2023-05-12",
                "vlr_nominal" => 392.97,
                "cod_banco_receb" => "041",
                "agencia_recebedora" => 369,
                "dv_agencia_receb" => 0,
                "seu_numero2" => "11842",
                "codigo_moeda" => 9,
                "tipo_inscricao" => 1,
                "numero_inscricao" => 57425639068,
                "nome_pagador" => "ADRIANA STIELER BOHRER",
                "filler6" => "",
                "vlr_tarifas" => 2.71,
                "codigo_ocorrencia" => "040301",
                "filler7" => "",
            ])
            ->and($lote['detalhes'][0]['registro3U'])->toEqual([
                "codigo_banco" => 104,
                "codigo_lote" => 1,
                "tipo_registro" => 3,
                "numero_registro" => 2,
                "seguimento" => "U",
                "filler1" => 0,
                "codigo_movimento" => 6,
                "vlr_juros_multa" => 13.34,
                "vlr_desconto" => 0,
                "vlr_abatimento" => 0,
                "vlr_iof" => 0,
                "vlr_pago" => 406.31,
                "vlr_liquido" => 406.31,
                "vlr_outras_despesas" => 0,
                "vlr_outros_creditos" => 0,
                "data_ocorrencia" => "2023-06-23",
                "data_credito" => "2023-06-26",
                "filler2" => 0,
                "data_debito_tarifa" => "2023-06-26",
                "codigo_banco_pagador" => "000000000000000",
                "filler4" => "000000000000000000000000000000",
            ])
            ->and($lote['registro5'])->toEqual([
                "codigo_banco" => 104,
                "codigo_lote" => 1,
                "tipo_registro" => 5,
                "filler1" => "",
                "qtd_registros" => 0,
                "qtd_titulos_simples" => 40,
                "vrl_titulos_simples" => 0,
                "qtd_titulos_caucionada" => 0,
                "vlr_titulos_caucionada" => 0,
                "qtd_titulos_descontada" => 0,
                "vlr_titulos_descontada" => 0,
                "filler2" => "0000000000000000000000000000",
                "filler3" => "",
            ]);
    }
    expect($registros['registro9'])->toEqual([
        "codigo_banco" => 104,
        "codigo_lote" => 9999,
        "tipo_registro" => 9,
        "filler1" => "",
        "qtd_lotes" => 1,
        "qtd_registros" => 6,
        "filler2" => "",
        "filler3" => "",
    ]);
});
